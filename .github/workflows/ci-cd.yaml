name: CI CD Pipeline
on:
  workflow_run:
    workflows: ["Create Infrastructure Deployment"]
    types:
      - completed
env:
  RESOURCE_GROUP: inkwell-rg
  AKS_CLUSTER_NAME: inkwell-aks
  ACR_NAME: inkwellacr
  IMAGE_NAME: inkwell-img
  DOCKER_EMAIL: mayuran.sundar@solirius.com
  APP_SERVICE_NAME: ink-well

jobs:
  docker-build-and-acr-push:
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build and Push Docker Image with Managed Identity
        run: |
          cd journal_project
          docker build --platform=linux/amd64 -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest .
          az acr login --name ${{ env.ACR_NAME }}
          docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest
  
  deploy-to-app-service:
    needs: docker-build-and-acr-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure App Service
        run: |
          az webapp config container set --name ${{ env.APP_SERVICE_NAME }} --resource-group ${{ env.RESOURCE_GROUP }} --docker-custom-image-name ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest

  # deploy-to-aks:
  #   needs:   docker-build-and-acr-push
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v2

  #     - name: Set up Azure CLI
  #       uses: azure/login@v1
  #       with:
  #         creds: ${{ secrets.AZURE_CREDENTIALS }}

  #     - name: Set up AKS Context
  #       uses: azure/aks-set-context@v1
  #       with:
  #         creds: ${{ secrets.AZURE_CREDENTIALS }}
  #         resource-group: ${{ env.RESOURCE_GROUP }}
  #         cluster-name: ${{ env.AKS_CLUSTER_NAME }}

  #     - name: Create Docker Registry Secret
  #       run: |
  #         kubectl create secret docker-registry acr-auth \
  #         --docker-server=${{ env.ACR_NAME }}.azurecr.io \
  #         --docker-username=${{ env.ACR_NAME }} \
  #         --docker-password=${{ secrets.ACR_DOCKER_PASSWORD }} \
  #         --docker-email=${{ env.DOCKER_EMAIL }}

  #     - name: Deploy to AKS
  #       run: |
  #         kubectl apply -f deployment.yaml
  #         kubectl apply -f service.yaml
