on:
  push:
    branches:
      - main
env:
  RESOURCE_GROUP: inkwell_rg
  AKS_CLUSTER_NAME: inkwell-aks-cluster
  ACR_NAME: inkwellcontrepo
  IMAGE_NAME: inkwell-image

jobs:
  terraform-and-build-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Terraform Init
        run: |
          cd infrastructure
          terraform init -input=false

      - name: Terraform Apply
        run: |
          cd infrastructure
          terraform apply -auto-approve

      - name: Build and Push Docker Image
        run: |
          docker build --platform=linux/amd64 -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.run_number }} .
          docker login ${{ env.ACR_NAME }}.azurecr.io -u ${{ env.ACR_NAME }} -p ${{ secrets.ACR_PASSWORD }}
          docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.run_number }}

  deploy-to-aks:
    needs: terraform-and-build-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up AKS Context
        uses: azure/aks-set-context@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          resourceGroup: ${{ env.RESOURCE_GROUP }}
          clusterName: ${{ env.AKS_CLUSTER_NAME }}

      - name: Deploy to AKS
        run: |
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml
